{"remainingRequest":"/Users/ziyiwang/Desktop/COMP435-final-proj/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ziyiwang/Desktop/COMP435-final-proj/src/views/components/SetSolarSystem.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/ziyiwang/Desktop/COMP435-final-proj/src/views/components/SetSolarSystem.vue","mtime":1702876124830},{"path":"/Users/ziyiwang/Desktop/COMP435-final-proj/node_modules/babel-loader/lib/index.js","mtime":1702276326097},{"path":"/Users/ziyiwang/Desktop/COMP435-final-proj/node_modules/cache-loader/dist/cjs.js","mtime":1702276330406},{"path":"/Users/ziyiwang/Desktop/COMP435-final-proj/node_modules/vue-loader/lib/index.js","mtime":1702276330641}],"contextDependencies":[],"result":["\nexport default {\n  props: {},\n  components: {},\n  data() {\n    return {\n      isRevolution: true, //公转状态\n      isRotation: true, //自转状态\n    };\n  },\n  computed: {},\n  watch: {},\n  created() {},\n  mounted() {},\n  methods: {\n    //公转\n    changeRevolution(val) {\n      let data = {\n        key: \"isRevolution\",\n        val: val,\n      };\n      this.changeSet(data);\n    },\n    //自转\n    changeRotation(val) {\n      let data = {\n        key: \"isRotation\",\n        val: val,\n      };\n      this.changeSet(data);\n    },\n    //改变设置\n    changeSet(data) {\n      this.$emit(\"changeSet\", data);\n    },\n  },\n};\n",{"version":3,"sources":["SetSolarSystem.vue"],"names":[],"mappings":";AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SetSolarSystem.vue","sourceRoot":"src/views/components","sourcesContent":["<template>\n  <div class=\"set-div\">\n    <el-form style=\"padding: 0px 20px\">\n      <el-form-item label=\"revolution: \">\n        <el-switch\n          v-model=\"isRevolution\"\n          :title=\"[!isRevolution ? 'Start' : 'Stop']\"\n          active-color=\"#13ce66\"\n          inactive-color=\"#ff4949\"\n          @change=\"changeRevolution\"\n        ></el-switch>\n      </el-form-item>\n      <el-form-item label=\"rotation: \">\n        <el-switch\n          v-model=\"isRotation\"\n          :title=\"[!isRotation ? 'Start' : 'Stop']\"\n          active-color=\"#13ce66\"\n          inactive-color=\"#ff4949\"\n          @change=\"changeRotation\"\n        ></el-switch>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n<script>\nexport default {\n  props: {},\n  components: {},\n  data() {\n    return {\n      isRevolution: true, //公转状态\n      isRotation: true, //自转状态\n    };\n  },\n  computed: {},\n  watch: {},\n  created() {},\n  mounted() {},\n  methods: {\n    //公转\n    changeRevolution(val) {\n      let data = {\n        key: \"isRevolution\",\n        val: val,\n      };\n      this.changeSet(data);\n    },\n    //自转\n    changeRotation(val) {\n      let data = {\n        key: \"isRotation\",\n        val: val,\n      };\n      this.changeSet(data);\n    },\n    //改变设置\n    changeSet(data) {\n      this.$emit(\"changeSet\", data);\n    },\n  },\n};\n</script>\n<style scoped lang='scss'>\n.set-div {\n  user-select: none;\n  color: #fff;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: absolute;\n  width: 135px;\n  bottom: 0;\n  left: 0;\n}\n::v-deep .el-form-item__label {\n  color: #fff;\n}\n</style>"]}]}